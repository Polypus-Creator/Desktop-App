<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxBombilla.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASdSURBVFhHnZVf
        bFNVHMc7UGPCmw8kxAcWHoyO2q3/MOvWcluTLfqyxdCJZYtZcIMn/I+iQxvd1m110xLWoakwwKXrGggC
        ISTyx5I5RikOjGyWzrBkKj7tQQMhrPf+/J17e7ue099WYcln7f3de3+f7znn3lMDADwE3tXwu/tlOeMe
        VTLuNPJv9tJGOTtuWlicrLouX7EM4GWr6HtpyCJJRtqGwjsIFJK9+ByHPP78XUhZd5E9CMgix03vEzji
        QVGsIwbQkSeqZuGi9CTZs4Clg6PWdXDEtKbwJEPJeOKUWIeS68iXK+eLQgTr1kCXc51+rBX9hlXKqGUB
        uQ3RqvL8xbekHZS0EErMMWk5m+8XkMohUHMbArULzMlq2glEjlqHMAAgczBiXg8zUjkK7olCEVJayI8V
        AFN2B3Q61qN4DgEIOId0bz4ASySPWg6yEHLMsh9mpY8poQgpFVicNF+G7tr9qryn9qA+ej5ALgREzS0w
        Yt+g3HLfKBLecIEyWQNKWioO8EMFKN9h+BMmTq5yybiI8g0YoqVQzuAD6KQ9T3NixplNbHk04lZQrjnz
        AZR4FUBvDU4tm95aUPZVF4V4kLK+QLkMMGpplaPmYTb9ELNhFzyRcZk5+RSOnIlP2kFJVGvfWSA9QKha
        E0fsAF861O/y8UouAFyzt6m9u5016jIEnMM4I60GbDanj4wFUS+afdHNBRh3aNKf8JMdn7Bpx7gUbOrV
        kfc7tDCHbVqYYRsXQE5Z31V7MzG7XmPOgO/+WojaJIiZXXAo987OSkYuwDSueQyFjNM48jFcAhbgNI74
        K230OCrtO/tEsmeNXAC4vukZtbcfHT0uF94jQdCxtmhNVFLWx1H8gAvBHr7vcQlys6VTMBqNAZylEQsn
        zyaMWdKD8AXchHCU5yFq9aE0wQXQubl5aQl+cYF80qSJ2RKc4UedZ8J0B2fFh5vQeXUzKnDy8tzzADHr
        Hvzx2UIGYOgz8Rt7BjbmR07KETlp/QLle3KzhJvRUohcAEMZNpxhTdW3QX1XvatR9muR/CEDyBOVf6gO
        1lN9+tUQM8xZEIBtxZYY7oBBbqNIS8+i8J9HDpCoUOCqzZjvp4ZwBvH1i+m1fIBlyXhaHjWAfNXyNdmz
        ALLIYyj7++emqfnkNsgz9grMH22E+QtbIRlphWTvTkj2t8NkrDlP+lTjPbyX23YpyKJIaGh0MBQeA4pP
        usIkgf5vpqleImRRJDQU66XkDErO6OyLXKF6iZBFkdBg/DNKzqDkjM/7IhNULxGyKLIvHO+g5AxKzugM
        RhJULxGyKIIzsJuSMyg5o6vv23NULxGyKNIzcOjNnoFhoPi0+wCJv/vAMaqXCFkU8fsjT+Go7oujZLz1
        QS/Je/7Q0ga0AmSRYm9neOf/DfB+R/8pqgcFWVyOvV3hZpT+tVyAtz/sk3d3DByh7l0OsrgS+K+suXXX
        9Ott7wCjaet28L66HRoafff9fv9j1D0rQRZL4fW1H0OAUetwq3g8L/1JXVsKsliKJl9bvRigvr7hI+ra
        UpDFUuBf2ZbX2t/w+nak3Jvr79bVNRzGWskfnmLA8B/jMzl1ONwtggAAAABJRU5ErkJggg==
</value>
  </data>
</root>